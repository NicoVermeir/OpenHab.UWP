<local:WidgetBase x:Class="OpenHAB.Windows.Controls.SliderWidget"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:converters="using:OpenHAB.Windows.Converters"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:local="using:OpenHAB.Windows.Controls"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  mc:Ignorable="d">

    <local:WidgetBase.Resources>
        <converters:StringToDoubleConverter x:Key="StringToDoubleConverter" />
    </local:WidgetBase.Resources>

    <Grid Width="300"
          Height="150"
          Background="{StaticResource OpenHABLightColor}"
          CornerRadius="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <local:ImageLabel VerticalAlignment="Center"
                          IconPath="{x:Bind Widget, Converter={StaticResource IconToPathConverter}, Mode=OneWay}"
                          LabelText="{x:Bind Widget.Label, Mode=OneWay}"
                          Tapped="Widget_OnTapped" />

        <local:RadialSlider Grid.Column="1"
                            Width="100"
                            Height="100"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            IsInteractive="True"
                            MaxAngle="150"
                            MinAngle="-150"
                            ScaleBrush="{StaticResource OpenHABSplitviewBrush}"
                            ScaleWidth="10"
                            StepSize="1"
                            TrailBrush="{StaticResource OpenHABLightOrangeBrush}"
                            ValueBrush="Black"
                            ValueChanged="RadialSlider_OnValueChanged"
                            Value="{x:Bind Widget.Item.GetStateAsDoubleValue(), Mode=OneWay}"
                            Minimum="{x:Bind Widget.MinValue, Mode=OneWay}"
                            Maximum="{x:Bind Widget.MaxValue, Mode=OneWay}"
                            />
    </Grid>
</local:WidgetBase>
