// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace openHAB.Core.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ActionDTO
    {
        /// <summary>
        /// Initializes a new instance of the ActionDTO class.
        /// </summary>
        public ActionDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActionDTO class.
        /// </summary>
        public ActionDTO(string id = default(string), string label = default(string), string description = default(string), IDictionary<string, object> configuration = default(IDictionary<string, object>), string type = default(string), IDictionary<string, string> inputs = default(IDictionary<string, string>))
        {
            Id = id;
            Label = label;
            Description = description;
            Configuration = configuration;
            Type = type;
            Inputs = inputs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public IDictionary<string, object> Configuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inputs")]
        public IDictionary<string, string> Inputs { get; set; }

    }
}
